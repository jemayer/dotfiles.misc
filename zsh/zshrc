# Requires "oh-my-zsh" configuration framework for fancyness.
# Upstream: https://github.com/robbyrussell/oh-my-zsh
# Tobi's fork: https://github.com/haelmy/oh-my-zsh

# Load shell agnostic rc files
[ -f $HOME/.shellrc ] && source $HOME/.shellrc
# Load local zsh configuration snippets
[ -f $HOME/.zshrc_local ] && source $HOME/.zshrc_local

# ZSH framework configuration
ZSH=$HOME/.oh-my-zsh
ZSH_THEME="agnoster"

plugins=(brew bundler chruby colored-man git screen vagrant)

source $ZSH/oh-my-zsh.sh

# Unset or set options differently from oh-my-zsh
unsetopt share_history
setopt interactivecomments

# Set directory colors to match solarized
LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD

# Patch the agnoster prompt
directory_name() {
  if [[ -d $(git rev-parse --show-toplevel 2>/dev/null) ]]; then
    # in a git repository
    git_root=$(git rev-parse --show-toplevel)
    physical_pwd=$(pwd -P)
    path_in_git="${physical_pwd#$git_root}"
    base=$(basename $git_root)

    echo -n $base
    echo -n $path_in_git
  else
    echo '%~'
  fi
}

prompt_dir() {
  prompt_segment blue black $(directory_name)
}

# Note: ZSH $PATH configuration on OSX is a bit tricky, see:
# - /etc/paths, /etc/paths.d
# - http://stackoverflow.com/questions/13708719/vim-path-configuration-in-os-x
# - http://blog.damselem.com/mac-os-x-zsh-vim-and-path/

if [ $(uname) = "Darwin" ] ; then
  PATH=$(brew --prefix homebrew/php/php56):$PATH:/usr/local/opt/go/libexec/bin
elif [ $(uname) = "Linux" ] ; then
  [ -d /usr/local/go/bin ] && PATH=$PATH:/usr/local/go/bin
fi
export PATH

# Requires "zsh-syntax-highlighting" from Homebrew
[[ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && \
  source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[[ -f $HOME/Repositories/git/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] &&
  source $HOME/Repositories/git/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# Amazon AWS CLI tool autocompletion
[[ -f /usr/local/share/zsh/site-functions/_aws ]] && \
  source /usr/local/share/zsh/site-functions/_aws

# Virtualenv for Python
if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
  export WORKON_HOME=$HOME/.virtualenvs
  source /usr/local/bin/virtualenvwrapper.sh
fi

# Boot2Docker
# FIXME: This can be down in a more sane way
if [ -x /usr/local/bin/boot2docker ]; then
  eval "$(boot2docker shellinit 2>/dev/null)"
fi
